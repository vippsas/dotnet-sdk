name: Build and Test

env:
  solution_file: 'src/Vipps.net.sln'
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'docs/**'


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '7.0.x' ]
    steps:
        # these are just to get commit messages of PRs. Should be deleted.
      - name: Get repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Print head git commit message
        run: "echo \"COMMIT_MESSAGE=$(git show -s --format=%s)\"  >> $GITHUB_ENV"
        #end of area to be deleted
      - name: Get repo with depth
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Echo github commit message
        run: "echo ${{env.COMMIT_MESSAGE}}" #${{ github.event.head_commit.message }}"
      - name: Check commit message if tag creation #SHOULD BE Only on main, also moved to the bottom.
        #if: ${{ github.event.head_commit.message }} != ''
        run: "echo \"RELEASE_TAG=$(echo '${{ env.COMMIT_MESSAGE }}' | grep -oP '(v(\\d+)\\.(\\d+)\\.(\\d+)(.*?))')\" >> $GITHUB_ENV"
      - name: Print release tag
        run: "echo ${{ env.RELEASE_TAG }}"
      - name: Configure git username
        run: git config user.name github-actions-bot
      - name: Configure git user email
        run: git config user.email noreply@vipps.no
      - name: Create Tag
        if: ${{ startsWith(env.RELEASE_TAG, 'v')}}
        run: git tag ${{ env.RELEASE_TAG }} -m ${{ env.RELEASE_TAG }}
      - name: Publish tags
        if: ${{ startsWith(env.RELEASE_TAG, 'v')}}
        run: git push --tags 
      - name: "Create GitHub release"
        if: ${{ startsWith(env.RELEASE_TAG, 'v')}}
        uses: actions/create-release@v1
        id: create_release
        with: 
            draft: false
            prerelease: false
            release_name: ${{ env.RELEASE_TAG }}
            tag_name: ${{ env.RELEASE_TAG }}
            body_path: CHANGELOG.md
        env:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
        #end of area that should be moved down 
      - name: Install dependencies Vipps.net
        run: dotnet restore src/Vipps.net/Vipps.net.csproj
      - name: Setup Nerdbank.GitVersioning
        run: dotnet tool install --tool-path some/where nbgv
      - name: Set Cloud Version using Nerdbank.Gitversioning
        run: nbgv cloud
      - name: Build vipps.net
        run: dotnet build src/Vipps.net/Vipps.net.csproj --no-restore
      - name: Install dependencies Vipps.net.Demo
        run: dotnet restore src/Vipps.net.Demo/Vipps.net.Demo.csproj
      - name: Build Vipps.net.Demo
        run: dotnet build src/Vipps.net.Demo/Vipps.net.Demo.csproj --no-restore
      - name: Install dependencies Vipps.net.AspCoreDemo
        run: dotnet restore src/Vipps.net.AspCoreDemo/Vipps.net.AspCoreDemo.csproj
      - name: Build Vipps.net.AspCoreDemo
        run: dotnet build src/Vipps.net.AspCoreDemo/Vipps.net.AspCoreDemo.csproj --no-restore
      - name: Install dependencies for Tests
        run: dotnet restore src/Tests/Vipps.net.Tests/Vipps.net.Tests.csproj
      - name: Test
        run: dotnet test src/Tests/Vipps.net.Tests/Vipps.net.Tests.csproj --no-restore --verbosity normal
      - name: CSharpier check
        run: |
          dotnet tool restore --tool-manifest src/.config/dotnet-tools.json
          cd src
          dotnet csharpier . --check
      - name: Pack Nuget
        run: dotnet pack "./src/Vipps.net/Vipps.net.csproj" --no-build --no-restore --include-source
      - name: Upload packed as artifact #replace with nuget? Only on main
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with: 
          name: Nuget package
          path: src/**/*.nupkg
