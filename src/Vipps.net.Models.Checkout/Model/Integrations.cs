/*
 * checkout-backend-merchant-v3.API
 *
 * See the [Checkout API Guide](https://developer.vippsmobilepay.com/docs/APIs/checkout-api/).
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Checkout.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Checkout.Model
{
    /// <summary>
    /// Integrations
    /// </summary>
    [DataContract(Name = "Integrations")]
    public partial class Integrations : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Integrations" /> class.
        /// </summary>
        /// <param name="porterbuddy">Configuration required to enable Porterbuddy logistics options.</param>
        /// <param name="helthjem">Configuration required to enable Helthjem logistics options.</param>
        public Integrations(Porterbuddy porterbuddy = default(Porterbuddy), Helthjem helthjem = default(Helthjem))
        {
            this.Porterbuddy = porterbuddy;
            this.Helthjem = helthjem;
        }

        /// <summary>
        /// Configuration required to enable Porterbuddy logistics options
        /// </summary>
        /// <value>Configuration required to enable Porterbuddy logistics options</value>
        [DataMember(Name = "porterbuddy", EmitDefaultValue = true)]
        public Porterbuddy Porterbuddy { get; set; }

        /// <summary>
        /// Configuration required to enable Helthjem logistics options
        /// </summary>
        /// <value>Configuration required to enable Helthjem logistics options</value>
        [DataMember(Name = "helthjem", EmitDefaultValue = true)]
        public Helthjem Helthjem { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Integrations {\n");
            sb.Append("  Porterbuddy: ").Append(Porterbuddy).Append("\n");
            sb.Append("  Helthjem: ").Append(Helthjem).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
