/*
 * checkout-backend-merchant-v3.API
 *
 * See the [Checkout API Guide](https://developer.vippsmobilepay.com/docs/APIs/checkout-api/).
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Checkout.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Checkout.Model
{
    /// <summary>
    /// Information about the merchant system.
    /// </summary>
    [DataContract(Name = "CheckoutSessionThirdPartyInformationHeaders")]
    public partial class CheckoutSessionThirdPartyInformationHeaders : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutSessionThirdPartyInformationHeaders" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CheckoutSessionThirdPartyInformationHeaders() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CheckoutSessionThirdPartyInformationHeaders" /> class.
        /// </summary>
        /// <param name="vippsSystemName">The name of the ecommerce solution. Example: \&quot;Acme Commerce\&quot;. (required).</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. Example: \&quot;3.1.2\&quot;. (required).</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin. Example: \&quot;acme-webshop\&quot;. (required).</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin. Example: \&quot;4.5.6\&quot;. (required).</param>
        public CheckoutSessionThirdPartyInformationHeaders(string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string))
        {
            // to ensure "vippsSystemName" is required (not null)
            if (vippsSystemName == null)
            {
                throw new ArgumentNullException("vippsSystemName is a required property for CheckoutSessionThirdPartyInformationHeaders and cannot be null");
            }
            this.VippsSystemName = vippsSystemName;
            // to ensure "vippsSystemVersion" is required (not null)
            if (vippsSystemVersion == null)
            {
                throw new ArgumentNullException("vippsSystemVersion is a required property for CheckoutSessionThirdPartyInformationHeaders and cannot be null");
            }
            this.VippsSystemVersion = vippsSystemVersion;
            // to ensure "vippsSystemPluginName" is required (not null)
            if (vippsSystemPluginName == null)
            {
                throw new ArgumentNullException("vippsSystemPluginName is a required property for CheckoutSessionThirdPartyInformationHeaders and cannot be null");
            }
            this.VippsSystemPluginName = vippsSystemPluginName;
            // to ensure "vippsSystemPluginVersion" is required (not null)
            if (vippsSystemPluginVersion == null)
            {
                throw new ArgumentNullException("vippsSystemPluginVersion is a required property for CheckoutSessionThirdPartyInformationHeaders and cannot be null");
            }
            this.VippsSystemPluginVersion = vippsSystemPluginVersion;
        }

        /// <summary>
        /// The name of the ecommerce solution. Example: \&quot;Acme Commerce\&quot;.
        /// </summary>
        /// <value>The name of the ecommerce solution. Example: \&quot;Acme Commerce\&quot;.</value>
        [DataMember(Name = "vipps-System-Name", IsRequired = true, EmitDefaultValue = true)]
        public string VippsSystemName { get; set; }

        /// <summary>
        /// The version number of the ecommerce solution. Example: \&quot;3.1.2\&quot;.
        /// </summary>
        /// <value>The version number of the ecommerce solution. Example: \&quot;3.1.2\&quot;.</value>
        [DataMember(Name = "vipps-System-Version", IsRequired = true, EmitDefaultValue = true)]
        public string VippsSystemVersion { get; set; }

        /// <summary>
        /// The name of the ecommerce plugin. Example: \&quot;acme-webshop\&quot;.
        /// </summary>
        /// <value>The name of the ecommerce plugin. Example: \&quot;acme-webshop\&quot;.</value>
        [DataMember(Name = "vipps-System-Plugin-Name", IsRequired = true, EmitDefaultValue = true)]
        public string VippsSystemPluginName { get; set; }

        /// <summary>
        /// The version number of the ecommerce plugin. Example: \&quot;4.5.6\&quot;.
        /// </summary>
        /// <value>The version number of the ecommerce plugin. Example: \&quot;4.5.6\&quot;.</value>
        [DataMember(Name = "vipps-System-Plugin-Version", IsRequired = true, EmitDefaultValue = true)]
        public string VippsSystemPluginVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CheckoutSessionThirdPartyInformationHeaders {\n");
            sb.Append("  VippsSystemName: ").Append(VippsSystemName).Append("\n");
            sb.Append("  VippsSystemVersion: ").Append(VippsSystemVersion).Append("\n");
            sb.Append("  VippsSystemPluginName: ").Append(VippsSystemPluginName).Append("\n");
            sb.Append("  VippsSystemPluginVersion: ").Append(VippsSystemPluginVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // VippsSystemName (string) maxLength
            if (this.VippsSystemName != null && this.VippsSystemName.Length > 30)
            {
                yield return new ValidationResult("Invalid value for VippsSystemName, length must be less than 30.", new [] { "VippsSystemName" });
            }

            // VippsSystemVersion (string) maxLength
            if (this.VippsSystemVersion != null && this.VippsSystemVersion.Length > 30)
            {
                yield return new ValidationResult("Invalid value for VippsSystemVersion, length must be less than 30.", new [] { "VippsSystemVersion" });
            }

            // VippsSystemPluginName (string) maxLength
            if (this.VippsSystemPluginName != null && this.VippsSystemPluginName.Length > 30)
            {
                yield return new ValidationResult("Invalid value for VippsSystemPluginName, length must be less than 30.", new [] { "VippsSystemPluginName" });
            }

            // VippsSystemPluginVersion (string) maxLength
            if (this.VippsSystemPluginVersion != null && this.VippsSystemPluginVersion.Length > 30)
            {
                yield return new ValidationResult("Invalid value for VippsSystemPluginVersion, length must be less than 30.", new [] { "VippsSystemPluginVersion" });
            }

            yield break;
        }
    }

}
