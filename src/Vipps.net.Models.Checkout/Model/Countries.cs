/*
 * checkout-backend-merchant-v3.API
 *
 * See the [Checkout API Guide](https://developer.vippsmobilepay.com/docs/APIs/checkout-api/).
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Checkout.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Checkout.Model
{
    /// <summary>
    /// Countries
    /// </summary>
    [DataContract(Name = "Countries")]
    public partial class Countries : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Countries" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected Countries() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Countries" /> class.
        /// </summary>
        /// <param name="supported">List of allowed countries in ISO-3166 Alpha 2. If specified, the customer will only be able to select these countries. Example [\&quot;NO\&quot;, \&quot;SE\&quot;, \&quot;DK\&quot;] (required).</param>
        public Countries(List<string> supported = default(List<string>))
        {
            // to ensure "supported" is required (not null)
            if (supported == null)
            {
                throw new ArgumentNullException("supported is a required property for Countries and cannot be null");
            }
            this.Supported = supported;
        }

        /// <summary>
        /// List of allowed countries in ISO-3166 Alpha 2. If specified, the customer will only be able to select these countries. Example [\&quot;NO\&quot;, \&quot;SE\&quot;, \&quot;DK\&quot;]
        /// </summary>
        /// <value>List of allowed countries in ISO-3166 Alpha 2. If specified, the customer will only be able to select these countries. Example [\&quot;NO\&quot;, \&quot;SE\&quot;, \&quot;DK\&quot;]</value>
        [DataMember(Name = "supported", IsRequired = true, EmitDefaultValue = true)]
        public List<string> Supported { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Countries {\n");
            sb.Append("  Supported: ").Append(Supported).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
