/*
 * checkout-backend-merchant-v3.API
 *
 * See the [Checkout API Guide](https://developer.vippsmobilepay.com/docs/APIs/checkout-api/).
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Checkout.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Checkout.Model
{
    /// <summary>
    /// Defines the details of the transaction
    /// </summary>
    [DataContract(Name = "TransactionAggregate")]
    public partial class TransactionAggregate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionAggregate" /> class.
        /// </summary>
        /// <param name="cancelledAmount">cancelledAmount.</param>
        /// <param name="capturedAmount">capturedAmount.</param>
        /// <param name="refundedAmount">refundedAmount.</param>
        /// <param name="authorizedAmount">authorizedAmount.</param>
        public TransactionAggregate(Amount cancelledAmount = default(Amount), Amount capturedAmount = default(Amount), Amount refundedAmount = default(Amount), Amount authorizedAmount = default(Amount))
        {
            this.CancelledAmount = cancelledAmount;
            this.CapturedAmount = capturedAmount;
            this.RefundedAmount = refundedAmount;
            this.AuthorizedAmount = authorizedAmount;
        }

        /// <summary>
        /// Gets or Sets CancelledAmount
        /// </summary>
        [DataMember(Name = "cancelledAmount", EmitDefaultValue = true)]
        public Amount CancelledAmount { get; set; }

        /// <summary>
        /// Gets or Sets CapturedAmount
        /// </summary>
        [DataMember(Name = "capturedAmount", EmitDefaultValue = true)]
        public Amount CapturedAmount { get; set; }

        /// <summary>
        /// Gets or Sets RefundedAmount
        /// </summary>
        [DataMember(Name = "refundedAmount", EmitDefaultValue = true)]
        public Amount RefundedAmount { get; set; }

        /// <summary>
        /// Gets or Sets AuthorizedAmount
        /// </summary>
        [DataMember(Name = "authorizedAmount", EmitDefaultValue = true)]
        public Amount AuthorizedAmount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TransactionAggregate {\n");
            sb.Append("  CancelledAmount: ").Append(CancelledAmount).Append("\n");
            sb.Append("  CapturedAmount: ").Append(CapturedAmount).Append("\n");
            sb.Append("  RefundedAmount: ").Append(RefundedAmount).Append("\n");
            sb.Append("  AuthorizedAmount: ").Append(AuthorizedAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
