/*
 * checkout-backend-merchant-v3.API
 *
 * See the [Checkout API Guide](https://developer.vippsmobilepay.com/docs/APIs/checkout-api/).
 *
 * The version of the OpenAPI document: v3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Checkout.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Checkout.Model
{
    /// <summary>
    /// Response from initiating a session.
    /// </summary>
    [DataContract(Name = "InitiateSessionResponse")]
    public partial class InitiateSessionResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InitiateSessionResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InitiateSessionResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InitiateSessionResponse" /> class.
        /// </summary>
        /// <param name="token">The token to be provided to Checkout. Example: \&quot;eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJUdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIiwic2Vzc2lvblBvbGxpbmdVUkwiOiJodHRwOi8vbG9jYWxob3N0OjUwMDAvY2hlY2tvdXQvc2Vzc2lvbi9UdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIn0.ln7VzZkNvUGu0HhyA_a8IbXQN35WhDBmCYC9IvyYL-I\&quot; (required).</param>
        /// <param name="checkoutFrontendUrl">The URL of the checkout frontend. Example: \&quot;https://vippscheckout.vipps.no/v1/\&quot;. (required).</param>
        /// <param name="pollingUrl">The URL to poll for session information. Example: \&quot;https://api.vipps.no/checkout/v1/session/31gf1g413121\&quot;. (required).</param>
        public InitiateSessionResponse(string token = default(string), string checkoutFrontendUrl = default(string), string pollingUrl = default(string))
        {
            // to ensure "token" is required (not null)
            if (token == null)
            {
                throw new ArgumentNullException("token is a required property for InitiateSessionResponse and cannot be null");
            }
            this.Token = token;
            // to ensure "checkoutFrontendUrl" is required (not null)
            if (checkoutFrontendUrl == null)
            {
                throw new ArgumentNullException("checkoutFrontendUrl is a required property for InitiateSessionResponse and cannot be null");
            }
            this.CheckoutFrontendUrl = checkoutFrontendUrl;
            // to ensure "pollingUrl" is required (not null)
            if (pollingUrl == null)
            {
                throw new ArgumentNullException("pollingUrl is a required property for InitiateSessionResponse and cannot be null");
            }
            this.PollingUrl = pollingUrl;
        }

        /// <summary>
        /// The token to be provided to Checkout. Example: \&quot;eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJUdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIiwic2Vzc2lvblBvbGxpbmdVUkwiOiJodHRwOi8vbG9jYWxob3N0OjUwMDAvY2hlY2tvdXQvc2Vzc2lvbi9UdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIn0.ln7VzZkNvUGu0HhyA_a8IbXQN35WhDBmCYC9IvyYL-I\&quot;
        /// </summary>
        /// <value>The token to be provided to Checkout. Example: \&quot;eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzZXNzaW9uSWQiOiJUdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIiwic2Vzc2lvblBvbGxpbmdVUkwiOiJodHRwOi8vbG9jYWxob3N0OjUwMDAvY2hlY2tvdXQvc2Vzc2lvbi9UdHF1Y3I5ZDdKRHZ6clhYWTU1WUZRIn0.ln7VzZkNvUGu0HhyA_a8IbXQN35WhDBmCYC9IvyYL-I\&quot;</value>
        [DataMember(Name = "token", IsRequired = true, EmitDefaultValue = true)]
        public string Token { get; set; }

        /// <summary>
        /// The URL of the checkout frontend. Example: \&quot;https://vippscheckout.vipps.no/v1/\&quot;.
        /// </summary>
        /// <value>The URL of the checkout frontend. Example: \&quot;https://vippscheckout.vipps.no/v1/\&quot;.</value>
        [DataMember(Name = "checkoutFrontendUrl", IsRequired = true, EmitDefaultValue = true)]
        public string CheckoutFrontendUrl { get; set; }

        /// <summary>
        /// The URL to poll for session information. Example: \&quot;https://api.vipps.no/checkout/v1/session/31gf1g413121\&quot;.
        /// </summary>
        /// <value>The URL to poll for session information. Example: \&quot;https://api.vipps.no/checkout/v1/session/31gf1g413121\&quot;.</value>
        [DataMember(Name = "pollingUrl", IsRequired = true, EmitDefaultValue = true)]
        public string PollingUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InitiateSessionResponse {\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  CheckoutFrontendUrl: ").Append(CheckoutFrontendUrl).Append("\n");
            sb.Append("  PollingUrl: ").Append(PollingUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
