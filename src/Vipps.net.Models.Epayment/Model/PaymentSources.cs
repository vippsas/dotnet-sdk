/*
 * ePayment API
 *
 * The ePayment API enables you to create Vipps MobilePay payments for online and in-person payments. See the [ePayment API Guide](https://developer.vippsmobilepay.com/docs/APIs/epayment-api) for more details.
 *
 * The version of the OpenAPI document: 1.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Vipps.net.Models.Epayment.Client.OpenAPIDateConverter;

namespace Vipps.net.Models.Epayment.Model
{
    /// <summary>
    /// PaymentSources
    /// </summary>
    [DataContract(Name = "PaymentSources")]
    public partial class PaymentSources : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentSources" /> class.
        /// </summary>
        /// <param name="giftCard">giftCard.</param>
        /// <param name="card">card.</param>
        /// <param name="voucher">voucher.</param>
        /// <param name="cash">cash.</param>
        public PaymentSources(int? giftCard = default(int?), int? card = default(int?), int? voucher = default(int?), int? cash = default(int?))
        {
            this.GiftCard = giftCard;
            this.Card = card;
            this.Voucher = voucher;
            this.Cash = cash;
        }

        /// <summary>
        /// Gets or Sets GiftCard
        /// </summary>
        [DataMember(Name = "giftCard", EmitDefaultValue = true)]
        public int? GiftCard { get; set; }

        /// <summary>
        /// Gets or Sets Card
        /// </summary>
        [DataMember(Name = "card", EmitDefaultValue = true)]
        public int? Card { get; set; }

        /// <summary>
        /// Gets or Sets Voucher
        /// </summary>
        [DataMember(Name = "voucher", EmitDefaultValue = true)]
        public int? Voucher { get; set; }

        /// <summary>
        /// Gets or Sets Cash
        /// </summary>
        [DataMember(Name = "cash", EmitDefaultValue = true)]
        public int? Cash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentSources {\n");
            sb.Append("  GiftCard: ").Append(GiftCard).Append("\n");
            sb.Append("  Card: ").Append(Card).Append("\n");
            sb.Append("  Voucher: ").Append(Voucher).Append("\n");
            sb.Append("  Cash: ").Append(Cash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
