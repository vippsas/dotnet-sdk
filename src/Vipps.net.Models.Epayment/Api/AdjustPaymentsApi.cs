/*
 * ePayment API
 *
 * The ePayment API enables you to create Vipps MobilePay payments for online and in-person payments. See the [ePayment API Guide](https://developer.vippsmobilepay.com/docs/APIs/epayment-api) for more details.
 *
 * The version of the OpenAPI document: 1.6.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Vipps.net.Models.Epayment.Client;
using Vipps.net.Models.Epayment.Model;

namespace Vipps.net.Models.Epayment.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAdjustPaymentsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Cancel a payment
        /// </summary>
        /// <remarks>
        /// Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        ModificationResponse CancelPayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0);

        /// <summary>
        /// Cancel a payment
        /// </summary>
        /// <remarks>
        /// Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        ApiResponse<ModificationResponse> CancelPaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0);
        /// <summary>
        /// Capture a payment
        /// </summary>
        /// <remarks>
        /// Capture the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        ModificationResponse CapturePayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0);

        /// <summary>
        /// Capture a payment
        /// </summary>
        /// <remarks>
        /// Capture the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        ApiResponse<ModificationResponse> CapturePaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0);
        /// <summary>
        /// Refund a payment
        /// </summary>
        /// <remarks>
        /// Refund the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        ModificationResponse RefundPayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0);

        /// <summary>
        /// Refund a payment
        /// </summary>
        /// <remarks>
        /// Refund the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        ApiResponse<ModificationResponse> RefundPaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAdjustPaymentsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Cancel a payment
        /// </summary>
        /// <remarks>
        /// Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        System.Threading.Tasks.Task<ModificationResponse> CancelPaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Cancel a payment
        /// </summary>
        /// <remarks>
        /// Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ModificationResponse>> CancelPaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Capture a payment
        /// </summary>
        /// <remarks>
        /// Capture the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        System.Threading.Tasks.Task<ModificationResponse> CapturePaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Capture a payment
        /// </summary>
        /// <remarks>
        /// Capture the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ModificationResponse>> CapturePaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Refund a payment
        /// </summary>
        /// <remarks>
        /// Refund the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        System.Threading.Tasks.Task<ModificationResponse> RefundPaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Refund a payment
        /// </summary>
        /// <remarks>
        /// Refund the given payment
        /// </remarks>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        System.Threading.Tasks.Task<ApiResponse<ModificationResponse>> RefundPaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IAdjustPaymentsApi : IAdjustPaymentsApiSync, IAdjustPaymentsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class AdjustPaymentsApi : IAdjustPaymentsApi
    {
        private Vipps.net.Models.Epayment.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="AdjustPaymentsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AdjustPaymentsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AdjustPaymentsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public AdjustPaymentsApi(string basePath)
        {
            this.Configuration = Vipps.net.Models.Epayment.Client.Configuration.MergeConfigurations(
                Vipps.net.Models.Epayment.Client.GlobalConfiguration.Instance,
                new Vipps.net.Models.Epayment.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Vipps.net.Models.Epayment.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Vipps.net.Models.Epayment.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Vipps.net.Models.Epayment.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AdjustPaymentsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public AdjustPaymentsApi(Vipps.net.Models.Epayment.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Vipps.net.Models.Epayment.Client.Configuration.MergeConfigurations(
                Vipps.net.Models.Epayment.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Vipps.net.Models.Epayment.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Vipps.net.Models.Epayment.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Vipps.net.Models.Epayment.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="AdjustPaymentsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public AdjustPaymentsApi(Vipps.net.Models.Epayment.Client.ISynchronousClient client, Vipps.net.Models.Epayment.Client.IAsynchronousClient asyncClient, Vipps.net.Models.Epayment.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Vipps.net.Models.Epayment.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Vipps.net.Models.Epayment.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Vipps.net.Models.Epayment.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Vipps.net.Models.Epayment.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Vipps.net.Models.Epayment.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Cancel a payment Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        public ModificationResponse CancelPayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0)
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = CancelPaymentWithHttpInfo(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, cancelModificationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cancel a payment Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        public Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> CancelPaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0)
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->CancelPayment");
            }

            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = cancelModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.CancelPayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ModificationResponse>("/v1/payments/{Reference}/cancel", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CancelPayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Cancel a payment Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        public async System.Threading.Tasks.Task<ModificationResponse> CancelPaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = await CancelPaymentWithHttpInfoAsync(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, cancelModificationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Cancel a payment Cancel the payment with the specified &#x60;reference&#x60; id.
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="cancelModificationRequest">New &#x60;CancelModificationRequest&#x60; body. (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        public async System.Threading.Tasks.Task<Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse>> CancelPaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CancelModificationRequest cancelModificationRequest = default(CancelModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->CancelPayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->CancelPayment");
            }


            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = cancelModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.CancelPayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ModificationResponse>("/v1/payments/{Reference}/cancel", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CancelPayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Capture a payment Capture the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        public ModificationResponse CapturePayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0)
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = CapturePaymentWithHttpInfo(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, captureModificationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Capture a payment Capture the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        public Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> CapturePaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0)
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->CapturePayment");
            }

            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = captureModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.CapturePayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ModificationResponse>("/v1/payments/{Reference}/capture", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CapturePayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Capture a payment Capture the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        public async System.Threading.Tasks.Task<ModificationResponse> CapturePaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = await CapturePaymentWithHttpInfoAsync(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, captureModificationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Capture a payment Capture the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="captureModificationRequest">Requested capture modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        public async System.Threading.Tasks.Task<Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse>> CapturePaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), CaptureModificationRequest captureModificationRequest = default(CaptureModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->CapturePayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->CapturePayment");
            }


            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = captureModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.CapturePayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ModificationResponse>("/v1/payments/{Reference}/capture", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("CapturePayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Refund a payment Refund the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ModificationResponse</returns>
        public ModificationResponse RefundPayment(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0)
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = RefundPaymentWithHttpInfo(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, refundModificationRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Refund a payment Refund the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ModificationResponse</returns>
        public Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> RefundPaymentWithHttpInfo(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0)
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->RefundPayment");
            }

            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = refundModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.RefundPayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ModificationResponse>("/v1/payments/{Reference}/refund", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RefundPayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Refund a payment Refund the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ModificationResponse</returns>
        public async System.Threading.Tasks.Task<ModificationResponse> RefundPaymentAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse> localVarResponse = await RefundPaymentWithHttpInfoAsync(reference, merchantSerialNumber, ocpApimSubscriptionKey, idempotencyKey, vippsSystemName, vippsSystemVersion, vippsSystemPluginName, vippsSystemPluginVersion, refundModificationRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Refund a payment Refund the given payment
        /// </summary>
        /// <exception cref="Vipps.net.Models.Epayment.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="reference"></param>
        /// <param name="merchantSerialNumber"></param>
        /// <param name="ocpApimSubscriptionKey">The subscription key for a sales unit.  See [API keys](https://developer.vippsmobilepay.com/docs/knowledge-base/api-keys/).</param>
        /// <param name="idempotencyKey">Idempotency key for the request, ensures idempotent actions. See [idempotency](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers#idempotency)</param>
        /// <param name="vippsSystemName">The name of the ecommerce solution. One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemVersion">The version number of the ecommerce solution. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginName">The name of the ecommerce plugin (if applicable). One word in lowercase letters is good. See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="vippsSystemPluginVersion">The version number of the ecommerce plugin (if applicable). See [http-headers](https://developer.vippsmobilepay.com/docs/knowledge-base/http-headers). (optional)</param>
        /// <param name="refundModificationRequest">Requested refund modification (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ModificationResponse)</returns>
        public async System.Threading.Tasks.Task<Vipps.net.Models.Epayment.Client.ApiResponse<ModificationResponse>> RefundPaymentWithHttpInfoAsync(string reference, string merchantSerialNumber, string ocpApimSubscriptionKey, string idempotencyKey, string vippsSystemName = default(string), string vippsSystemVersion = default(string), string vippsSystemPluginName = default(string), string vippsSystemPluginVersion = default(string), RefundModificationRequest refundModificationRequest = default(RefundModificationRequest), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'reference' is set
            if (reference == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'reference' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'merchantSerialNumber' is set
            if (merchantSerialNumber == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'merchantSerialNumber' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'ocpApimSubscriptionKey' is set
            if (ocpApimSubscriptionKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'ocpApimSubscriptionKey' when calling AdjustPaymentsApi->RefundPayment");
            }

            // verify the required parameter 'idempotencyKey' is set
            if (idempotencyKey == null)
            {
                throw new Vipps.net.Models.Epayment.Client.ApiException(400, "Missing required parameter 'idempotencyKey' when calling AdjustPaymentsApi->RefundPayment");
            }


            Vipps.net.Models.Epayment.Client.RequestOptions localVarRequestOptions = new Vipps.net.Models.Epayment.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/problem+json"
            };

            var localVarContentType = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Vipps.net.Models.Epayment.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("Reference", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(reference)); // path parameter
            localVarRequestOptions.HeaderParameters.Add("Merchant-Serial-Number", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(merchantSerialNumber)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Ocp-Apim-Subscription-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(ocpApimSubscriptionKey)); // header parameter
            localVarRequestOptions.HeaderParameters.Add("Idempotency-Key", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(idempotencyKey)); // header parameter
            if (vippsSystemName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemName)); // header parameter
            }
            if (vippsSystemVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemVersion)); // header parameter
            }
            if (vippsSystemPluginName != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Name", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginName)); // header parameter
            }
            if (vippsSystemPluginVersion != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Vipps-System-Plugin-Version", Vipps.net.Models.Epayment.Client.ClientUtils.ParameterToString(vippsSystemPluginVersion)); // header parameter
            }
            localVarRequestOptions.Data = refundModificationRequest;

            localVarRequestOptions.Operation = "AdjustPaymentsApi.RefundPayment";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer-Authorization) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ModificationResponse>("/v1/payments/{Reference}/refund", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("RefundPayment", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
